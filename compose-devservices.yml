name: your-services

include:
  - compose-services.yml

services:

  postgres:
    image: postgres:17
    restart: always
    labels:
      ## HL: Map port mapping or env var to application properties
      io.quarkus.devservices.compose.config_map.port.5432: psql.port
      io.quarkus.devservices.compose.config_map.env.POSTGRES_USER: psql.user
    ## HL: health checks are used to determine if the dev service is ready
    healthcheck:
      test: pg_isready -U myuser -d mydb
      interval: 5s
      timeout: 3s
      retries: 3
    ports:
      - '5432'
    environment:
      ## HL: DB connection properties are extracted from the env vars
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydb
      PGDATA: /var/lib/mydb/data
    volumes:
      - test_pgdata:/var/lib/mydb/data

  mysql:
    image: mysql:8-oracle
    ## HL use profiles to start the container only when needed
    profiles:
      - mysql
    ## HL start services but ignore them for dev services
#    labels:
#      io.quarkus.devservices.compose.ignore: true
    ports:
      - '3306'
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: true
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
      MYSQL_DATABASE: mymydb

  kafka:
    image: apache/kafka-native:latest
    ## HL custom images are possible by setting the image-name config property on the dev service
#    image: my-broker:latest
    labels:
      ## HL: Readiness check on logs
      io.quarkus.devservices.compose.wait_for.logs: .*Kafka Server started.*
      ## HL: Host exposed ports are injected into the running container
      io.quarkus.devservices.compose.exposed_ports: /etc/kafka/docker/ports
    command: "/kafka.sh"
    restart: always
    mem_limit: 64m
    volumes:
      - ./compose/kafka.sh:/kafka.sh
    ports:
      - '9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LOG_CLEANER_DEDUPE_BUFFER_SIZE: 2097152
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    networks:
      internal:
      default:

volumes:
  test_pgdata:

networks:
  default:
  internal:
